// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPortfolio.Data;

#nullable disable

namespace MyPortfolio.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240518074837_withdatestripe")]
    partial class withdatestripe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyPortfolio.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MobileModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsedYears")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MobileModel = "Galaxy S20",
                            UsedYears = "1",
                            brand = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            MobileModel = "iPhone 12",
                            UsedYears = "0.5",
                            brand = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            MobileModel = "Xperia 5",
                            UsedYears = "2",
                            brand = "Sony"
                        },
                        new
                        {
                            Id = 4,
                            MobileModel = "Pixel 5",
                            UsedYears = "0.5",
                            brand = "Google"
                        },
                        new
                        {
                            Id = 5,
                            MobileModel = "8T",
                            UsedYears = "1.5",
                            brand = "OnePlus"
                        },
                        new
                        {
                            Id = 6,
                            MobileModel = "Mi 10T Pro",
                            UsedYears = "0.8",
                            brand = "Xiaomi"
                        },
                        new
                        {
                            Id = 7,
                            MobileModel = "P40 Pro",
                            UsedYears = "1.2",
                            brand = "Huawei"
                        },
                        new
                        {
                            Id = 8,
                            MobileModel = "Velvet",
                            UsedYears = "2.5",
                            brand = "LG"
                        },
                        new
                        {
                            Id = 9,
                            MobileModel = "Moto G Power",
                            UsedYears = "0.3",
                            brand = "Motorola"
                        },
                        new
                        {
                            Id = 10,
                            MobileModel = "8.3 5G",
                            UsedYears = "1.8",
                            brand = "Nokia"
                        },
                        new
                        {
                            Id = 11,
                            MobileModel = "Zenfone 7 Pro",
                            UsedYears = "0.7",
                            brand = "Asus"
                        },
                        new
                        {
                            Id = 12,
                            MobileModel = "KEY2",
                            UsedYears = "2.3",
                            brand = "BlackBerry"
                        },
                        new
                        {
                            Id = 13,
                            MobileModel = "U12 Plus",
                            UsedYears = "3.0",
                            brand = "HTC"
                        },
                        new
                        {
                            Id = 14,
                            MobileModel = "Find X2 Pro",
                            UsedYears = "0.9",
                            brand = "Oppo"
                        },
                        new
                        {
                            Id = 15,
                            MobileModel = "X7 Pro",
                            UsedYears = "0.6",
                            brand = "Realme"
                        },
                        new
                        {
                            Id = 16,
                            MobileModel = "X50 Pro",
                            UsedYears = "1.7",
                            brand = "Vivo"
                        },
                        new
                        {
                            Id = 17,
                            MobileModel = "Legion Phone Duel",
                            UsedYears = "0.4",
                            brand = "Lenovo"
                        },
                        new
                        {
                            Id = 18,
                            MobileModel = "Axon 20 5G",
                            UsedYears = "1.4",
                            brand = "ZTE"
                        },
                        new
                        {
                            Id = 19,
                            MobileModel = "X3 NFC",
                            UsedYears = "0.2",
                            brand = "Poco"
                        },
                        new
                        {
                            Id = 20,
                            MobileModel = "10 Pro",
                            UsedYears = "2.1",
                            brand = "TCL"
                        });
                });

            modelBuilder.Entity("MyPortfolio.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComntConetent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CraetedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Like")
                        .HasColumnType("int");

                    b.Property<int>("MobileSellId")
                        .HasColumnType("int");

                    b.Property<int>("MobileSellingID")
                        .HasColumnType("int");

                    b.Property<bool>("isLiked")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MobileSellingID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("MyPortfolio.Models.FormMobileSellIt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TAAccessories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TAConditionalDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("FormMobileSellIts");
                });

            modelBuilder.Entity("MyPortfolio.Models.StripeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentIntentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stripes");
                });

            modelBuilder.Entity("MyPortfolio.Models.Comment", b =>
                {
                    b.HasOne("MyPortfolio.Models.FormMobileSellIt", "MobileSellIt")
                        .WithMany()
                        .HasForeignKey("MobileSellingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MobileSellIt");
                });

            modelBuilder.Entity("MyPortfolio.Models.FormMobileSellIt", b =>
                {
                    b.HasOne("MyPortfolio.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });
#pragma warning restore 612, 618
        }
    }
}
